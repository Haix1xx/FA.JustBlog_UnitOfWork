// <auto-generated />
using System;
using FA.JustBlog.Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FA.JustBlog.Core.Migrations
{
    [DbContext(typeof(JustBlogContext))]
    [Migration("20240118024842_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FA.JustBlog.Core.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UrlSlug")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "latest news",
                            Name = "News",
                            UrlSlug = "news"
                        },
                        new
                        {
                            Id = 2,
                            Description = "latest news about sport",
                            Name = "Sport",
                            UrlSlug = "sport"
                        },
                        new
                        {
                            Id = 3,
                            Description = "latest news about music",
                            Name = "Music",
                            UrlSlug = "music"
                        });
                });

            modelBuilder.Entity("FA.JustBlog.Core.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CommentText")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<DateTime>("CommentTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 1, 18, 9, 48, 42, 214, DateTimeKind.Local).AddTicks(5893));

                    b.Property<string>("CommnentHeader")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)")
                        .HasAnnotation("RegularExpression", "^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CommentText = "This is acctually good!",
                            CommentTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CommnentHeader = "Bad",
                            Email = "axxxxxxx2@gmail.com",
                            Name = "Jeans",
                            PostId = 1
                        },
                        new
                        {
                            Id = 2,
                            CommentText = "This is acctually good!",
                            CommentTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CommnentHeader = "Goods",
                            Email = "ahr2@gmail.com",
                            Name = "John",
                            PostId = 2
                        },
                        new
                        {
                            Id = 3,
                            CommentText = "This is acctually good!xxx",
                            CommentTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CommnentHeader = "Goods",
                            Email = "ahr224@gmail.com",
                            Name = "Billie",
                            PostId = 2
                        },
                        new
                        {
                            Id = 4,
                            CommentText = "This is acctually good!",
                            CommentTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CommnentHeader = "Goods",
                            Email = "ahro@gmail.com",
                            Name = "Ano",
                            PostId = 2
                        },
                        new
                        {
                            Id = 5,
                            CommentText = "This is acctually good!",
                            CommentTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CommnentHeader = "Goods",
                            Email = "funnyguy@gmail.com",
                            Name = "Funny Guy",
                            PostId = 3
                        });
                });

            modelBuilder.Entity("FA.JustBlog.Core.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("PostContent")
                        .IsRequired()
                        .HasMaxLength(10000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PostedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Published")
                        .HasColumnType("bit");

                    b.Property<decimal>("Rate")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RateCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("ShortDescription")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("TotalRate")
                        .HasColumnType("int");

                    b.Property<string>("UrlSlug")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("ViewCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Modified = new DateTime(2024, 1, 18, 9, 48, 42, 216, DateTimeKind.Local).AddTicks(9455),
                            PostContent = "This is an post content",
                            PostedOn = new DateTime(2024, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Published = false,
                            Rate = 9.8m,
                            RateCount = 15,
                            ShortDescription = "short",
                            Title = "Title latest",
                            TotalRate = 147,
                            UrlSlug = "title-latest",
                            ViewCount = 5
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Modified = new DateTime(2024, 1, 18, 9, 48, 42, 216, DateTimeKind.Local).AddTicks(9479),
                            PostContent = "This is an post content",
                            PostedOn = new DateTime(2024, 12, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Published = false,
                            Rate = 10.923076923076923076923076923m,
                            RateCount = 13,
                            ShortDescription = "short",
                            Title = "Title new releases",
                            TotalRate = 142,
                            UrlSlug = "latest-release",
                            ViewCount = 53
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Modified = new DateTime(2024, 1, 18, 9, 48, 42, 216, DateTimeKind.Local).AddTicks(9490),
                            PostContent = "This is an post content",
                            PostedOn = new DateTime(2023, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Published = true,
                            Rate = 23.026143790849673202614379085m,
                            RateCount = 153,
                            ShortDescription = "short",
                            Title = "BillBoard Hot100 Release",
                            TotalRate = 3523,
                            UrlSlug = "hot100-bb",
                            ViewCount = 24
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            Modified = new DateTime(2024, 1, 18, 9, 48, 42, 216, DateTimeKind.Local).AddTicks(9498),
                            PostContent = "This is an post content",
                            PostedOn = new DateTime(2024, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Published = false,
                            Rate = 0m,
                            RateCount = 0,
                            ShortDescription = "short",
                            Title = "Title hotest",
                            TotalRate = 0,
                            UrlSlug = "news-hot",
                            ViewCount = 0
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            Modified = new DateTime(2024, 1, 18, 9, 48, 42, 216, DateTimeKind.Local).AddTicks(9503),
                            PostContent = "This is an post content",
                            PostedOn = new DateTime(2024, 1, 18, 9, 48, 42, 216, DateTimeKind.Local).AddTicks(9501),
                            Published = true,
                            Rate = 15.153846153846153846153846154m,
                            RateCount = 13,
                            ShortDescription = "short",
                            Title = "Football Well-Player",
                            TotalRate = 197,
                            UrlSlug = "football-player",
                            ViewCount = 35
                        });
                });

            modelBuilder.Entity("FA.JustBlog.Core.Models.PostTag", b =>
                {
                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("PostId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("PostTags");

                    b.HasData(
                        new
                        {
                            PostId = 1,
                            TagId = 2
                        },
                        new
                        {
                            PostId = 1,
                            TagId = 3
                        },
                        new
                        {
                            PostId = 2,
                            TagId = 3
                        },
                        new
                        {
                            PostId = 3,
                            TagId = 2
                        },
                        new
                        {
                            PostId = 4,
                            TagId = 3
                        },
                        new
                        {
                            PostId = 5,
                            TagId = 3
                        },
                        new
                        {
                            PostId = 5,
                            TagId = 1
                        });
                });

            modelBuilder.Entity("FA.JustBlog.Core.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UrlSlug")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UrlSlug");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Count = 0,
                            Description = "Description",
                            Name = "latest",
                            UrlSlug = "latest"
                        },
                        new
                        {
                            Id = 2,
                            Count = 0,
                            Description = "Description",
                            Name = "hotest",
                            UrlSlug = "hotest"
                        },
                        new
                        {
                            Id = 3,
                            Count = 0,
                            Description = "Description",
                            Name = "funny",
                            UrlSlug = "funny"
                        });
                });

            modelBuilder.Entity("FA.JustBlog.Core.Models.Comment", b =>
                {
                    b.HasOne("FA.JustBlog.Core.Models.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");
                });

            modelBuilder.Entity("FA.JustBlog.Core.Models.Post", b =>
                {
                    b.HasOne("FA.JustBlog.Core.Models.Category", "Category")
                        .WithMany("Posts")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("FA.JustBlog.Core.Models.PostTag", b =>
                {
                    b.HasOne("FA.JustBlog.Core.Models.Post", "Post")
                        .WithMany("PostTags")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FA.JustBlog.Core.Models.Tag", "Tag")
                        .WithMany("PostTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("FA.JustBlog.Core.Models.Category", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("FA.JustBlog.Core.Models.Post", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("PostTags");
                });

            modelBuilder.Entity("FA.JustBlog.Core.Models.Tag", b =>
                {
                    b.Navigation("PostTags");
                });
#pragma warning restore 612, 618
        }
    }
}
